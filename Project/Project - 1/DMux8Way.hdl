// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux8Way.hdl

/**
 * 8-way demultiplexor:
 * {a, b, c, d, e, f, g, h} = {in, 0, 0, 0, 0, 0, 0, 0} if sel == 000
 *                            {0, in, 0, 0, 0, 0, 0, 0} if sel == 001
 *                            etc.
 *                            {0, 0, 0, 0, 0, 0, 0, in} if sel == 111
 */

CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:
    // Put your code here:
    Not(in=sel[0],out=sel0);
    Not(in=sel[1],out=sel1);
    Not(in=sel[2],out=sel2);
    And(a=sel0,b=sel1,out=out0);
    And(a=in,b=sel2,out=op0);
    And(a=out0,b=op0,out=a);
    And(a=sel[0],b=sel1,out=out1);
    And(a=in,b=sel2,out=op1);
    And(a=out1,b=op1,out=b);
    And(a=sel0,b=sel[1],out=out2);
    And(a=in,b=sel2,out=op2);
    And(a=out2,b=op2,out=c);
    And(a=sel[0],b=sel[1],out=out3);
    And(a=in,b=sel2,out=op3);
    And(a=out3,b=op3,out=d);
    And(a=sel0,b=sel1,out=out4);
    And(a=in,b=sel[2],out=op4);
    And(a=out4,b=op4,out=e);
    And(a=sel[0],b=sel1,out=out5);
    And(a=in,b=sel[2],out=op5);
    And(a=out5,b=op5,out=f);
    And(a=sel0,b=sel[1],out=out6);
    And(a=in,b=sel[2],out=op6);
    And(a=out6,b=op6,out=g);
    And(a=sel[0],b=sel[1],out=out7);
    And(a=in,b=sel[2],out=op7);
    And(a=out7,b=op7,out=h);
}

